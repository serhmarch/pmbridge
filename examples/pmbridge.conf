#############################################################################################
############################################ HELP ###########################################
#############################################################################################
# * MEMORY={<0x>,<1x>,<3x>,<4x>}
#       Command for inner memory configuration.
#       * 0x - quantity of coils (0x)-memory 
#       * 1x - quantity of input discretes (1x)-memory 
#       * 3x - quantity of input registers (3x)-memory 
#       * 4x - quantity of holding registers (4x)-memory
#
# 
# * SERVER={<type>,<name>,...}
# * CLIENT={<type>,<name>,...}
#       Command to create server and client port respectively.
#       * type - type of Modbus protocol of the port. Can be {RTU,ASC,TCP}
#       * name - name/id of the port. It is used for QUERY commands (client) and log
#
#       Types of port and parameters:
#       * SERVER={TCP,<name>,<tcpport>,<timeout>,<maxconn>} 
#           * tcpport - unnecessary parameter, server ModbusTCP port (502 by default)
#           * timeout - unnecessary parameter, timeout for read in milliseconds (3000 by default)
#           * maxconn - unnecessary parameter, maximum TCP connection for server (10 by default)
#
#       * CLIENT={TCP,<name>,<host>,<tcpport>,<timeout>} 
#	        * host    - remote host to connect
#	        * tcpport - unnecessary parameter, remote port to connect (502 by default)
#           * timeout - unnecessary parameter, timeout for read in milliseconds (3000 by default)
#
#       * SERVER={RTU,<name>,<devname>,<baudrate>,<databits>,<parity>,<stopbits>,<flowcontrol>,<timeoutfb>,<timeoutib>}
#         SERVER={ASC,<name>,<devname>,<baudrate>,<databits>,<parity>,<stopbits>,<flowcontrol>,<timeoutfb>,<timeoutib>}
#         CLIENT={RTU,<name>,<devname>,<baudrate>,<databits>,<parity>,<stopbits>,<flowcontrol>,<timeoutfb>,<timeoutib>}
#         CLIENT={ASC,<name>,<devname>,<baudrate>,<databits>,<parity>,<stopbits>,<flowcontrol>,<timeoutfb>,<timeoutib>}
#	        * devname     - device system name or port name. For example: COM13, /dev/ttyM0, /dev/ttyUSB0 etc
#	        * baudrate    - unnecessary parameter, baud rate, use from serie: 1200, 2400, 4800, 9600, 19200, 38400, 57600, 115200 (9600 by default)
#	        * databits    - unnecessary parameter, number of databits, use from serie: 5, 6, 7, 8  (8 by default)
#	        * parity      - unnecessary parameter, parity: None,N - none, Even,E - even, Odd,O - odd (None by default)
#	        * stopbits    - unnecessary parameter, stop bits: may be 1, 1.5 or 2 (1 by default)
#	        * flowcontrol - unnecessary parameter, flow control: No, Hard, Soft (No by default)
#           * timeoutfb   - unnecessary parameter, timeout for read first byte of the input packet in milliseconds (1000 by default)
#           * timeoutib   - unnecessary parameter, timeout for read next bytes of the input packet in milliseconds (50 by default)
#
#
# * QUERY={<client>,<unit>,<func>,<devadr>,<count>,<memadr>,<execpatt>,<succadr>,<errcadr>,<errvadr>}
#       Command for remote request for previously configured client port.
#       * client   - name of client port previously defined in CLIENT command
#       * unit     - modbus unit/address slave
#       * func     - name of function. Can be {RD,WR}. What to read/write defined in the next <devadr> parameter.
#       * devadr   - address of first item of the remote device to read/write
#       * count    - count of elements (discret or register)
#       * memadr   - address within inner memory to get/set
#       * execpatt - execution pattern. Specifies the query will be executed once at execpatt-cycle
#       * succadr  - address of success counter
#       * errcadr  - address of error counter
#       * errvadr  - address of last error
#
# * COPY={<srcadr>,<count>,<destadr>}
#       Command to copy data within inner memory.
#       * srcadr  - memory address to copy from
#       * count   - count of elements to copy (discret or register)
#       * destadr - memory address to copy to
#
# * DELAY={<msec>}
#       Command to delay execution (wait) for defined milliseconds.
#       * msec    - time to delay in milliseconds
#
# * DUMP={<memadr>,<count>,<format>}
#       Command to print current inner memory data with defined format.
#       * memadr  - memory address to print
#       * count   - count of elements to print (discret or register)
#       * format  - format of element. Must be:
#                     Bin16   Bin32   Bin64 
#                     Oct16   Oct32   Oct64 
#                     Dec16   Dec32   Dec64 
#                     UDec16  UDec32  UDec64
#                     Hex16   Hex32   Hex64 
#                             Float   Double
#
#
# `pmbridge` support 3 types of addressing format: 
#
# | Memory type       | Standard (1 based) | IEC 61131-3 (0 based)| IEC 61131-3 Hex (0 based)
# |-------------------|--------------------|----------------------|---------------------------
# | Coils             | `000001`           | `%Q0`                | `%Q0000h`                 
# | Discrete inputs   | `100016`           | `%I15`               | `%I000Fh`                
# | Input registers   | `300017`           | `%IW16`              | `%IW0010h`               
# | Holding registers | `406658`           | `%MW6657`            | `%MW1A01h`
#
#
#############################################################################################
##################################### CONFIG PARAMS #########################################
#############################################################################################

# Declaration. Memory with 1000 coils, 1000 input discretes, 1000 input registers and 5000 holding registers
MEMORY=1000,1000,1000,5000

# Declaration. Port as TCP server with port 502, timeout 5000ms and max 10 connections
SERVER=TCP,serv,502,5000,10

# Declaration. Port as RTU client with portname "COM6", baudrate 9600, 8 databits, no parity, 1 stopbits
CLIENT={RTU    , # Protocol type
        client1, # Current client port name for QUERY commands and log
        "COM6" , # serial port name
        9600   , # baud rate
        8      , # data bits
        N      , # parity
        1      , # stop bits
        No     , # flow constrol
        1000   , # timeout first byte
        50       # timeout inter byte
        }

# Declaration. Port as TCP client for 'localhost' with port 503
CLIENT=TCP,client2,"localhost",503

# Execution. Write 10 holding register into remote device [400001:400010] with values of inner memory [300001:300010].
# Success counter is 300901, error counter is 300902 and last error code is 300903 within inner memory.
QUERY=client1,1,WR,400001,10,300001,1,300901,300902,300903

# Execution. Print inner memory dump into console: 3 registers [300901:300903] in decimal format
DUMP=300901,3,Hex16

# Execution. Wait 200 milliseconds
DELAY=200

# Execution. Read 10 holding register from remote device [400001:400010] and put values into inner memory [400101:400110].
QUERY={client2, # Previously created client
       1      , # Modbus unit/slave address
       RD     , # Read function with next parameter that specify what to read
       %MW0   , # Read 4x (holding) register with offset 0 from device
       10     , # Quantity of registers to read
       %MW100 , # Where to put data was read, 4x (holding) register with offset 100 (same as 4001001)
       3      , # Execution pattern. Execute only once at 3 cycles
       300904 , # Address succes counter within inner memory
       300905 , # Address error counter within inner memory
       300906   # Address last error code within inner memory
       }

# Execution. Print inner memory dump into console: 3 registers [300904:300906] in decimal format
DUMP={300904,3,Dec16}

# Execution. Copy 6 registers (previously defined counters) from inner memory [300901:300906] into inner memory [400001:400006]
COPY={300901,6,%MW0000h}

# Execution. Wait 2 seconds (2000 milliseconds)
DELAY={2000}
